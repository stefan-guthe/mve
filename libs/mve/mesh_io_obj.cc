#include <fstream>
#include <cerrno>
#include <cstring>

#include "util/exception.h"
#include "mve/mesh_io_obj.h"

MVE_NAMESPACE_BEGIN
MVE_GEOM_NAMESPACE_BEGIN

void
save_obj_mesh (TriangleMesh::ConstPtr mesh, std::string const& filename)
{
    if (mesh == NULL)
        throw std::invalid_argument("NULL mesh given");
    if (filename.empty())
        throw std::invalid_argument("No filename given");

    mve::TriangleMesh::VertexList const& verts(mesh->get_vertices());
    mve::TriangleMesh::FaceList const& faces(mesh->get_faces());

    if (faces.size() % 3 != 0)
        throw std::invalid_argument("Triangle indices not divisible by 3");

    /* Open output file. */
    std::ofstream out(filename.c_str());
    if (!out.good())
        throw util::FileException(filename, std::strerror(errno));

    out << "# Export generated by libmve\n";
    out << "# Vertices\n";
    for (std::size_t i = 0; i < verts.size(); ++i)
    {
        out << "v " << verts[i][0] << " " << verts[i][1]
            << " "  << verts[i][2] << "\n";
    }

    out << "\n# Faces\n";
    for (std::size_t i = 0; i < faces.size(); i += 3)
    {
        out << "f " << (faces[i + 0] + 1)
            << " " << (faces[i + 1] + 1)
            << " " << (faces[i + 2] + 1) << "\n";
    }

    /* Close output file. */
    out.close();
}

MVE_GEOM_NAMESPACE_END
MVE_NAMESPACE_END
